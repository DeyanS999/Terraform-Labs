6. Use Terraform Workspaces for Multiple Environments
	• Goal: Manage multiple environments (Dev, Staging, Prod).
	• Tasks:
		○ Set up Terraform workspaces for different environments.
		○ Use variables to adjust settings per environment.
	• Focus Areas: Multi-environment management, scalability.

Created 3 workspaces DEV, ACC, PRD and created a single vm with vnet, subnet rg etc..., each with its own name and parameters 

# main.tf

terraform {
  required_providers {
    azurerm = {
      source = "hashicorp/azurerm"
      version = "3.0.0"
    }
  }
}
provider "azurerm" {
    features {
      
    }
  # Configuration options
}
#Virtual Machine
resource "azurerm_resource_group" "test1" {
  name     = var.resource_group
  location = "East US"
}
resource "azurerm_virtual_network" "testvm1" {
  name                = var.virtual_network
  address_space       = var.virtual_network_address_prefix
  location            = azurerm_resource_group.test1.location
  resource_group_name = azurerm_resource_group.test1.name
}
resource "azurerm_subnet" "subnet1" {
  name                 = var.azurerm_subnet
  resource_group_name  = azurerm_resource_group.test1.name
  virtual_network_name = azurerm_virtual_network.testvm1.name
  address_prefixes     = var.azurerm_subnet_address_prefix
}
#Creating Public IP
  resource "azurerm_public_ip" "publicip" {
  name                = "PublicIP1-${terraform.workspace}"
  resource_group_name = azurerm_resource_group.test1.name
  location            = azurerm_resource_group.test1.location
  allocation_method   = "Static"
  }
resource "azurerm_network_interface" "NIC1" {
  name                = "example-nic1-${terraform.workspace}"
  location            = azurerm_resource_group.test1.location
  resource_group_name = azurerm_resource_group.test1.name
  ip_configuration {
    name                          = "internal"
    subnet_id                     = azurerm_subnet.subnet1.id
    private_ip_address_allocation = "Dynamic"
    public_ip_address_id = azurerm_public_ip.publicip.id
  }
}
resource "azurerm_network_interface_security_group_association" "NSG-NIC1" {
  network_interface_id      = azurerm_network_interface.NIC1.id
  network_security_group_id = azurerm_network_security_group.NSG1.id
}

resource "azurerm_windows_virtual_machine" "vmtest" {
  name                = var.azurerm_windows_virtual_machine
  resource_group_name = azurerm_resource_group.test1.name
  location            = azurerm_resource_group.test1.location
  size                = var.azurerm_windows_virtual_machine_size
  admin_username      = var.admin_username
  admin_password      = var.admin_password
  network_interface_ids = [
    azurerm_network_interface.NIC1.id,
  ]
  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }
  source_image_reference {
    publisher = "MicrosoftWindowsServer"
    offer     = "WindowsServer"
    sku       = "2022-datacenter-g2"
    version   = "latest"
  }
}
resource "azurerm_network_security_group" "NSG1" {
  name                = "acceptanceTestSecurityGroup1"
  location            = azurerm_resource_group.test1.location
  resource_group_name = azurerm_resource_group.test1.name
}
resource "azurerm_network_security_rule" "rdp-test" {
  name                        = "test123-${terraform.workspace}"
  priority                    = 1001
  direction                   = "Inbound"
  access                      = "Allow"
  protocol                    = "Tcp"
  source_port_range           = "*"
  destination_port_range      = "3389"
  source_address_prefix       = "*"
  destination_address_prefix  = "*"
  resource_group_name         = azurerm_resource_group.test1.name
  network_security_group_name = azurerm_network_security_group.NSG1.name
}


# variables.tf

variable "resource_group" {
  default = "rg1"
  type = string
  description = "Name of Resoruce Group 1."
}

variable "virtual_network" {
    description = "Name of Virtual network 1."
    type = string
    default = "vnet1"
}

variable "virtual_network_address_prefix" {
    type = list(string)
    description = "Address prefix of the virtual network"
}

variable "azurerm_subnet" {
  description = "Name of Subnet 1."
  type = string
  default = "Subnet1"
}

variable "azurerm_subnet_address_prefix" {
    description = "Address prefix of Subnet 1."
    type = list(string)
}

variable "azurerm_windows_virtual_machine" {
  description = "Name of VM1"
}

variable "azurerm_windows_virtual_machine_size" {
    description = "Size (SKU) of VM 1."
    type = string
}

variable "admin_username" {
  type = string
}

variable "admin_password" {
    type = string
}


# dev.tfvars

resource_group = "rg1-dev"

virtual_network = "vnet1-dev"
virtual_network_address_prefix = ["10.0.0.0/16"]

azurerm_subnet = "azurerm_subnet-dev"
azurerm_subnet_address_prefix = ["10.0.2.0/24"]

azurerm_windows_virtual_machine = "VM1-dev"

azurerm_windows_virtual_machine_size = "Standard_B2s"

admin_username = "admin-dev"
admin_password = "fghfdghghfdkj546@#$%%$#^"



# acc.tfvars

resource_group = "rg1-acc"

virtual_network = "vnet1-acc"
virtual_network_address_prefix = ["10.1.0.0/16"]

azurerm_subnet = "azurerm_subnet-acc"
azurerm_subnet_address_prefix = ["10.1.3.0/24"]

azurerm_windows_virtual_machine = "VM1-acc"

azurerm_windows_virtual_machine_size = "Standard_B1ls"

admin_username = "admin-acc"
admin_password = "fghfdghghfdkj546@#$%"



# prd.tfvars

resource_group = "rg1-prd"

virtual_network = "vnet1-prd"
virtual_network_address_prefix = ["10.2.0.0/16"]

azurerm_subnet = "azurerm_subnet-prd"
azurerm_subnet_address_prefix = ["10.2.4.0/24"]

azurerm_windows_virtual_machine = "VM1-prd"

azurerm_windows_virtual_machine_size = "Standard_B1s"

admin_username = "admin-prd"
admin_password = "fghfdghghfdkj546@#$%$@%"
