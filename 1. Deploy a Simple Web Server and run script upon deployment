1. Deploy a Simple Web Server
	• Goal: Set up a single EC2 instance or Azure VM to host a basic web page.
	• Tasks:
		○ Create a VM.
		○ Use user_data to install a web server like Nginx or Apache and serve a basic HTML page.
	• Focus Areas: Provisioning, understanding user data, and security groups.



# Provider
terraform {
  required_providers {
    azurerm = {
      source = "hashicorp/azurerm"
      version = "4.16.0"
    }
  }
}
provider "azurerm" {
  # Configuration options
  features {}
  subscription_id = "c23a3174-f9e7-4414-9f75-966ddbb786fb"
}




# =====================================================
#************************ VM1 *********************
# =====================================================
resource "azurerm_resource_group" "rg1" {
  name     = "RG1-test"
  location = "East US"
}
resource "azurerm_virtual_network" "vnet1" {
  name                = "Vnet1"
  address_space       = ["10.0.0.0/16"]
  location            = azurerm_resource_group.rg1.location
  resource_group_name = azurerm_resource_group.rg1.name
}

resource "azurerm_subnet" "subnet1" {
  name                 = "Subnet1"
  resource_group_name  = azurerm_resource_group.rg1.name
  virtual_network_name = azurerm_virtual_network.vnet1.name
  address_prefixes     = ["10.0.2.0/24"]
}
resource "azurerm_network_interface" "nic1" {
  name                = "Nic1"
  location            = azurerm_resource_group.rg1.location
  resource_group_name = azurerm_resource_group.rg1.name
  ip_configuration {
    name                          = "privateIP"
    subnet_id                     = azurerm_subnet.subnet1.id
    private_ip_address_allocation = "Static"
    private_ip_address = "10.0.2.10"
    public_ip_address_id = azurerm_public_ip.publicip-vm1.id
  }
}
#data "template_file" "SL" {
 # template = file("./SL.sh")
#}
data "local_file" "SL" {
 filename = "${path.module}/SL.sh"
}
resource "azurerm_linux_virtual_machine" "vm1" {
  name                = "VM1-Linux"
  resource_group_name = azurerm_resource_group.rg1.name
  location            = azurerm_resource_group.rg1.location
  size                = "Standard_B1s"
  custom_data = base64encode(data.local_file.SL.content) #base64encode(data.template_file.SL.rendered)
  
  admin_username      = "admind"
  admin_password      = "Vanguard1234"
  disable_password_authentication = "false"
  network_interface_ids = [
    azurerm_network_interface.nic1.id,
  ]
  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }
  source_image_reference {
    publisher = "Canonical"
    offer     = "0001-com-ubuntu-server-jammy"
    sku       = "22_04-lts-gen2"
    version   = "latest"
  }
  
}
# --------------------------------------------------
# This public IP to be associated with vm1 (VM1-Linux)
 resource "azurerm_public_ip" "publicip-vm1" {
  name                = "acceptanceTestPublicIp1"
  resource_group_name = azurerm_resource_group.rg1.name
  location            = azurerm_resource_group.rg1.location
  allocation_method   = "Static"
}

# -------------------------------------------
#                   NSG
resource "azurerm_network_security_group" "nsg1" {
  name                = "NSG1"
  location            = azurerm_resource_group.rg1.location
  resource_group_name = azurerm_resource_group.rg1.name
  security_rule {
    name                       = "test123"
    priority                   = 100
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "Tcp"
    source_port_range          = "*"
    destination_port_range     = "22"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
  }
}
# -----------------------------------
# NSG Association
resource "azurerm_network_interface_security_group_association" "nsg1-association" {
  network_interface_id      = azurerm_network_interface.nic1.id
  network_security_group_id = azurerm_network_security_group.nsg1.id
}



SL.sh
#!/usr/bin/env bash
set -x
exec > >(tee /var/log/user-data.log | logger -t user-data -s 2>/dev/console) 2>&1
# Update package list
sudo apt-get update
# Install a fun, unique package (e.g., sl)
sudo apt-get install -y sl
