2. Create an S3 Bucket with Access Control
	• Goal: Deploy an S3 bucket (or Azure Storage Account container) with proper access controls.
	• Tasks:
		○ Enable versioning.
		○ Create a bucket policy  (in azurethis should be blob container i guess )that allows access to specific IPs.
	• Focus Areas: Resource policies and bucket configurations.




# PROVIDER 
terraform {
  required_providers {
    azurerm = {
      source = "hashicorp/azurerm"
      version = "4.16.0"
    }
  }
}
provider "azurerm" {
    subscription_id = "----"
  features {
  }
}
# ==============================================
# MAIN BODY
resource "azurerm_resource_group" "rg1-test" {
  name     = "RG1-Test"
  location = "East US"
}
resource "azurerm_storage_account" "storageaccount-1" {
  name                     = "storage1test134543"
  resource_group_name      = azurerm_resource_group.rg1-test.name
  location                 = azurerm_resource_group.rg1-test.location
  account_tier             = "Standard"
  account_replication_type = "LRS"
  
  
  blob_properties {
versioning_enabled = true
  }
network_rules {
  ip_rules = ["176.12.39.167"]
  bypass = ["AzureServices"] # Allows trusted Azure services
  default_action = "Deny"
}
  tags = {
    environment = "test"
  }
}
resource "azurerm_storage_container" "container1-test" {
  name                  = "container1-test"
  storage_account_id    = azurerm_storage_account.storageaccount-1.id
  container_access_type = "private"
}
